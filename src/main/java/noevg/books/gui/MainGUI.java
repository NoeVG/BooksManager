/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package noevg.books.gui;

import com.mongodb.client.MongoIterable;
import java.awt.Desktop;
import java.io.File;
import java.net.URI;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import noevg.books.database.DataBase;
import noevg.books.gui.ModelTable.ModelTable;
import noevg.books.storage.GoogleDrive;
import org.bson.Document;

/**
 *
 * @author eon
 */
public class MainGUI extends javax.swing.JFrame {

    /**
     * Creates new form MainGUI
     */
    public MainGUI() {
        modelCategory = new ModelTable(new String[]{"#","Category","Topics"});
        modelTopics = new ModelTable(new String[]{"#","Topic","Books","Created"});
        modelBooks = new ModelTable(new String[]{"#","ISBN","Title","Author","Editorial","Upload","SizeMB","idGoogle"});

        modelCategoryShown = new ModelTable(new String[]{"#","Category","Topics"});
        modelTopicsShown = new ModelTable(new String[]{"#","Topic","Books","Created"});
        modelBooksShown = new ModelTable(new String[]{"#","ISBN","Title","Author","Editorial","Upload","SizeMB","idGoogle"});

        initComponents();
        
        this.jProgressUpload.setVisible(false);
        
        connectMongoDB();
        connectGoogleDrive();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrameSettingsDB = new javax.swing.JFrame();
        jScrollPane7 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldURLDB = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldUserDB = new javax.swing.JTextField();
        jTextFieldNameDB = new javax.swing.JTextField();
        jTextFieldPassDB = new javax.swing.JTextField();
        jButtonConnectDB = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jTextFieldPortDB = new javax.swing.JTextField();
        jLabelStatus = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jFrameSettingsGoogleDrive = new javax.swing.JFrame();
        jPanel5 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jButtonBuildAuthorized = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelResources = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTableCategoriesShown = new javax.swing.JTable();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTableTopicsShown = new javax.swing.JTable();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTableBooksShown = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jButtonOpenBook = new javax.swing.JButton();
        jPanelManagerResources = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanelManager = new javax.swing.JPanel();
        jPanelCategory = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldCategory = new javax.swing.JTextField();
        jButtonCreateCategory = new javax.swing.JButton();
        jButtonDeleteCategory = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCreateCategory = new javax.swing.JTable();
        jPanelTopic = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldTopicCreate = new javax.swing.JTextField();
        jButtonCreateTopic = new javax.swing.JButton();
        jButtonDeleteTopic = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableCreateTopicCategory = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextFieldCategoryCreateTopic = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTableCreateTopic = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        jPanelBook = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableCreateBookCategory = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableCreateBookTopic = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldTitleBook = new javax.swing.JTextField();
        jTextFieldAuthorBook = new javax.swing.JTextField();
        jTextFieldEditorialBook = new javax.swing.JTextField();
        jTextFieldPathBook = new javax.swing.JTextField();
        jButtonSelectBook = new javax.swing.JButton();
        jButtonAddBook = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableCreateBook = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jButtonDeleteBook = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jTextFieldISBNBook = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTextFieldTopicBook = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextFieldCategoryBook = new javax.swing.JTextField();
        jProgressUpload = new javax.swing.JProgressBar();
        jLabel22 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        jFrameSettingsDB.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jFrameSettingsDB.setTitle("Data Base Setings");
        jFrameSettingsDB.setAlwaysOnTop(true);
        jFrameSettingsDB.setMinimumSize(new java.awt.Dimension(400, 300));
        jFrameSettingsDB.setResizable(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(300, 300));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.Y_AXIS));

        jPanel3.setMaximumSize(new java.awt.Dimension(400, 300));
        jPanel3.setMinimumSize(new java.awt.Dimension(400, 300));
        jPanel3.setPreferredSize(new java.awt.Dimension(400, 300));

        jLabel10.setText("MongoDB Server ");

        jTextFieldURLDB.setText("ds119788.mlab.com");

        jLabel11.setText("User");

        jLabel12.setText("Pass");

        jLabel13.setText("Data Base");

        jTextFieldUserDB.setText("noe");

        jTextFieldNameDB.setText("books");

        jTextFieldPassDB.setText("1234lucas");

        jButtonConnectDB.setText("Connect");
        jButtonConnectDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConnectDBActionPerformed(evt);
            }
        });

        jLabel14.setText("Port");

        jTextFieldPortDB.setText("19788");

        jLabelStatus.setText("Status : ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel12)
                                        .addComponent(jLabel11))
                                    .addComponent(jLabel14))))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldUserDB, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldPassDB, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jTextFieldNameDB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldURLDB, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(161, 161, 161)
                                .addComponent(jTextFieldPortDB, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabelStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonConnectDB)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldURLDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextFieldUserDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextFieldPassDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextFieldNameDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonConnectDB)
                    .addComponent(jLabel14)
                    .addComponent(jTextFieldPortDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabelStatus)
                .addContainerGap(99, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel3);

        jPanel4.setMaximumSize(new java.awt.Dimension(400, 100));
        jPanel4.setMinimumSize(new java.awt.Dimension(400, 100));
        jPanel4.setPreferredSize(new java.awt.Dimension(400, 100));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel4);

        jScrollPane7.setViewportView(jPanel2);

        jFrameSettingsDB.getContentPane().add(jScrollPane7, java.awt.BorderLayout.CENTER);

        jFrameSettingsGoogleDrive.setTitle("Settings Google Drive");
        jFrameSettingsGoogleDrive.setAlwaysOnTop(true);
        jFrameSettingsGoogleDrive.setMinimumSize(new java.awt.Dimension(400, 300));
        jFrameSettingsGoogleDrive.setResizable(false);

        jLabel21.setText("Build a new authorized  API Google");

        jButtonBuildAuthorized.setText("Build Authorized");
        jButtonBuildAuthorized.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuildAuthorizedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonBuildAuthorized)
                    .addComponent(jLabel21))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addComponent(jButtonBuildAuthorized)
                .addContainerGap(195, Short.MAX_VALUE))
        );

        jFrameSettingsGoogleDrive.getContentPane().add(jPanel5, java.awt.BorderLayout.CENTER);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(620, 600));
        setMinimumSize(new java.awt.Dimension(620, 600));
        setPreferredSize(new java.awt.Dimension(620, 600));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setLayout(new java.awt.BorderLayout());

        jTabbedPane1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jTabbedPane1ComponentShown(evt);
            }
        });

        jPanelResources.setLayout(new java.awt.BorderLayout());

        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTableCategoriesShown.setModel(this.modelCategoryShown);
        jTableCategoriesShown.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCategoriesShownMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(jTableCategoriesShown);

        jPanel6.add(jScrollPane10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 560, 120));

        jTableTopicsShown.setModel(this.modelTopicsShown);
        jTableTopicsShown.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableTopicsShownMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(jTableTopicsShown);

        jPanel6.add(jScrollPane11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 560, 110));

        jTableBooksShown.setModel(this.modelBooksShown);
        jTableBooksShown.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableBooksShown.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableBooksShownMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(jTableBooksShown);

        jPanel6.add(jScrollPane12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 560, 120));

        jLabel23.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel23.setText("Books");
        jPanel6.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, -1, -1));

        jLabel24.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel24.setText("Categories");
        jPanel6.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jLabel25.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel25.setText("Topics");
        jPanel6.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, -1, -1));

        jButtonOpenBook.setText("Open Book");
        jButtonOpenBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOpenBookActionPerformed(evt);
            }
        });
        jPanel6.add(jButtonOpenBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 530, 240, -1));

        jScrollPane9.setViewportView(jPanel6);

        jPanelResources.add(jScrollPane9, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Resources", jPanelResources);

        jPanelManagerResources.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelManagerResourcesComponentShown(evt);
            }
        });
        jPanelManagerResources.setLayout(new java.awt.BorderLayout());

        jPanelManager.setLayout(new javax.swing.BoxLayout(jPanelManager, javax.swing.BoxLayout.Y_AXIS));

        jPanelCategory.setBorder(javax.swing.BorderFactory.createTitledBorder("Category"));
        jPanelCategory.setMaximumSize(new java.awt.Dimension(600, 300));
        jPanelCategory.setMinimumSize(new java.awt.Dimension(600, 300));
        jPanelCategory.setPreferredSize(new java.awt.Dimension(600, 300));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Category");

        jTextFieldCategory.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jButtonCreateCategory.setText("Create");
        jButtonCreateCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateCategoryActionPerformed(evt);
            }
        });

        jButtonDeleteCategory.setText("Delete");
        jButtonDeleteCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteCategoryActionPerformed(evt);
            }
        });

        jScrollPane2.setAutoscrolls(true);

        jTableCreateCategory.setModel(this.modelCategory);
        jTableCreateCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCreateCategoryMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableCreateCategory);

        javax.swing.GroupLayout jPanelCategoryLayout = new javax.swing.GroupLayout(jPanelCategory);
        jPanelCategory.setLayout(jPanelCategoryLayout);
        jPanelCategoryLayout.setHorizontalGroup(
            jPanelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCategoryLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jTextFieldCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107))
            .addGroup(jPanelCategoryLayout.createSequentialGroup()
                .addGap(195, 195, 195)
                .addComponent(jButtonCreateCategory)
                .addGap(114, 114, 114)
                .addComponent(jButtonDeleteCategory)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelCategoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanelCategoryLayout.setVerticalGroup(
            jPanelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCategoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCreateCategory)
                    .addComponent(jButtonDeleteCategory))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jPanelManager.add(jPanelCategory);

        jPanelTopic.setBorder(javax.swing.BorderFactory.createTitledBorder("Topic"));
        jPanelTopic.setMaximumSize(new java.awt.Dimension(600, 500));
        jPanelTopic.setMinimumSize(new java.awt.Dimension(600, 500));
        jPanelTopic.setPreferredSize(new java.awt.Dimension(600, 500));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Topic");

        jTextFieldTopicCreate.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jButtonCreateTopic.setText("Create");
        jButtonCreateTopic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateTopicActionPerformed(evt);
            }
        });

        jButtonDeleteTopic.setText("Delete");
        jButtonDeleteTopic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteTopicActionPerformed(evt);
            }
        });

        jScrollPane3.setAutoscrolls(true);

        jTableCreateTopicCategory.setModel(this.modelCategory);
        jTableCreateTopicCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCreateTopicCategoryMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableCreateTopicCategory);

        jLabel16.setText("Category");

        jLabel15.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel15.setText("Category");

        jTextFieldCategoryCreateTopic.setEditable(false);
        jTextFieldCategoryCreateTopic.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jScrollPane8.setAutoscrolls(true);

        jTableCreateTopic.setModel(this.modelTopics);
        jTableCreateTopic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCreateTopicMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(jTableCreateTopic);

        jLabel17.setText("Topic");

        javax.swing.GroupLayout jPanelTopicLayout = new javax.swing.GroupLayout(jPanelTopic);
        jPanelTopic.setLayout(jPanelTopicLayout);
        jPanelTopicLayout.setHorizontalGroup(
            jPanelTopicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTopicLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanelTopicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTopicLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldCategoryCreateTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTopicLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldTopicCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(103, 103, 103))
            .addGroup(jPanelTopicLayout.createSequentialGroup()
                .addGroup(jPanelTopicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTopicLayout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(jButtonCreateTopic)
                        .addGap(95, 95, 95)
                        .addComponent(jButtonDeleteTopic))
                    .addGroup(jPanelTopicLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelTopicLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(137, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTopicLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTopicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanelTopicLayout.setVerticalGroup(
            jPanelTopicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTopicLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel17)
                .addGap(8, 8, 8)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelTopicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextFieldCategoryCreateTopic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelTopicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldTopicCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelTopicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCreateTopic)
                    .addComponent(jButtonDeleteTopic))
                .addGap(27, 27, 27))
        );

        jPanelManager.add(jPanelTopic);

        jPanelBook.setBorder(javax.swing.BorderFactory.createTitledBorder("Book"));
        jPanelBook.setMaximumSize(new java.awt.Dimension(600, 800));
        jPanelBook.setMinimumSize(new java.awt.Dimension(600, 800));
        jPanelBook.setPreferredSize(new java.awt.Dimension(600, 800));

        jScrollPane4.setAutoscrolls(true);

        jTableCreateBookCategory.setModel(this.modelCategory);
        jTableCreateBookCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCreateBookCategoryMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTableCreateBookCategory);

        jScrollPane5.setAutoscrolls(true);

        jTableCreateBookTopic.setModel(this.modelTopics);
        jTableCreateBookTopic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCreateBookTopicMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTableCreateBookTopic);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("Category");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("Topic");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setText("Author Book");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setText("Title Book");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel7.setText("Editorial");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel8.setText("Path");

        jTextFieldTitleBook.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jTextFieldAuthorBook.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jTextFieldEditorialBook.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jTextFieldPathBook.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jButtonSelectBook.setText("Select");
        jButtonSelectBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectBookActionPerformed(evt);
            }
        });

        jButtonAddBook.setText("Add Book");
        jButtonAddBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddBookActionPerformed(evt);
            }
        });

        jScrollPane6.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane6.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane6.setAutoscrolls(true);

        jTableCreateBook.setModel(this.modelBooks);
        jTableCreateBook.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableCreateBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCreateBookMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jTableCreateBook);

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel9.setText("Books");

        jButtonDeleteBook.setText("Delete Book");
        jButtonDeleteBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteBookActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel18.setText("ISBN");

        jTextFieldISBNBook.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel19.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel19.setText("Topic");

        jTextFieldTopicBook.setEditable(false);
        jTextFieldTopicBook.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel20.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel20.setText("Category");

        jTextFieldCategoryBook.setEditable(false);
        jTextFieldCategoryBook.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jProgressUpload.setIndeterminate(true);
        jProgressUpload.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jProgressUploadStateChanged(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel22.setText("Upload");

        javax.swing.GroupLayout jPanelBookLayout = new javax.swing.GroupLayout(jPanelBook);
        jPanelBook.setLayout(jPanelBookLayout);
        jPanelBookLayout.setHorizontalGroup(
            jPanelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBookLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addComponent(jScrollPane5)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanelBookLayout.createSequentialGroup()
                        .addGroup(jPanelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBookLayout.createSequentialGroup()
                        .addGap(0, 19, Short.MAX_VALUE)
                        .addGroup(jPanelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBookLayout.createSequentialGroup()
                                .addGroup(jPanelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel22))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldTitleBook, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                                    .addComponent(jTextFieldAuthorBook, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                                    .addComponent(jTextFieldEditorialBook, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                                    .addGroup(jPanelBookLayout.createSequentialGroup()
                                        .addGroup(jPanelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(jPanelBookLayout.createSequentialGroup()
                                                .addComponent(jButtonAddBook)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButtonDeleteBook))
                                            .addComponent(jTextFieldPathBook, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonSelectBook))
                                    .addComponent(jTextFieldISBNBook)
                                    .addComponent(jProgressUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBookLayout.createSequentialGroup()
                                .addGroup(jPanelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel19))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldTopicBook, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldCategoryBook, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        jPanelBookLayout.setVerticalGroup(
            jPanelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBookLayout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jTextFieldCategoryBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jTextFieldTopicBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jTextFieldISBNBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldTitleBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldAuthorBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldEditorialBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldPathBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSelectBook))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddBook)
                    .addComponent(jButtonDeleteBook))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(jPanelBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(21, 21, 21))
        );

        jPanelManager.add(jPanelBook);

        jScrollPane1.setViewportView(jPanelManager);

        jPanelManagerResources.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Manager Resources", jPanelManagerResources);

        jPanel1.add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");

        jMenuItem5.setText("Close");
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Setings");

        jMenuItem1.setText("Configure Data Base");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setText("Configure Storage ");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Help");

        jMenuItem3.setText("Documentation");
        jMenu3.add(jMenuItem3);

        jMenuItem4.setText("About");
        jMenu3.add(jMenuItem4);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonConnectDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConnectDBActionPerformed
        connectMongoDB();
    }//GEN-LAST:event_jButtonConnectDBActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        this.jFrameSettingsDB.pack();
        this.jFrameSettingsDB.setLocationRelativeTo(null);
        this.jFrameSettingsDB.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jPanelManagerResourcesComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelManagerResourcesComponentShown
        this.loadDataCategories(this.modelCategory);
    }//GEN-LAST:event_jPanelManagerResourcesComponentShown

    private void jButtonCreateCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateCategoryActionPerformed
        if(this.statusDB){
            if(dataBase.createCollection(this.jTextFieldCategory.getText())){
                JOptionPane.showMessageDialog(this, "Category created successful!");
                this.loadDataCategories(this.modelCategory);
            }else{
                JOptionPane.showMessageDialog(this,"Category don't create, category exist!","Error",JOptionPane.ERROR_MESSAGE);
            }        
        }else{
            JOptionPane.showMessageDialog(this,"DataBase don't connection","Error",JOptionPane.ERROR_MESSAGE);
        }
        this.jTextFieldCategory.setText("");
    }//GEN-LAST:event_jButtonCreateCategoryActionPerformed

    private void jTableCreateCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCreateCategoryMouseClicked
        int row = this.jTableCreateCategory.rowAtPoint(evt.getPoint());        
        this.jTextFieldCategory.setText( this.modelCategory.getValueAt(row, 1).toString() );
    }//GEN-LAST:event_jTableCreateCategoryMouseClicked

    private void jButtonDeleteCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteCategoryActionPerformed
        if(this.statusDB){
            deleteFilesFromCollectionOrCategories(this.jTextFieldCategory.getText());
            if(dataBase.deleteCollection(this.jTextFieldCategory.getText())){
                
                JOptionPane.showMessageDialog(this, "Category delete successful!");
                this.loadDataCategories(this.modelCategory);
            }else{
                JOptionPane.showMessageDialog(this,"Category don't delete, category not exist!","Error",JOptionPane.ERROR_MESSAGE);
            }        
        }else{
            JOptionPane.showMessageDialog(this,"DataBase don't connection","Error",JOptionPane.ERROR_MESSAGE);
        }
        this.jTextFieldCategory.setText("");
    }//GEN-LAST:event_jButtonDeleteCategoryActionPerformed

    private void jTableCreateTopicCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCreateTopicCategoryMouseClicked
        int row = this.jTableCreateTopicCategory.rowAtPoint(evt.getPoint());
        this.jTextFieldCategoryCreateTopic.setText( this.modelCategory.getValueAt(row, 1).toString() );
        this.loadDataTopics(this.modelTopics,this.modelCategory.getValueAt(row, 1).toString());
    }//GEN-LAST:event_jTableCreateTopicCategoryMouseClicked

    private void jTableCreateTopicMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCreateTopicMouseClicked
        int row = this.jTableCreateTopic.rowAtPoint(evt.getPoint());
        this.jTextFieldTopicCreate.setText( this.modelTopics.getValueAt(row, 1).toString() );
    }//GEN-LAST:event_jTableCreateTopicMouseClicked

    private void jButtonCreateTopicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateTopicActionPerformed
        if(this.statusDB){
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            Date date = new Date();
           
            ArrayList<Document> books = new ArrayList<Document>();
            Document document = new Document("_id",jTextFieldTopicCreate.getText())
                                    .append("books", books)
                                    .append("created", dateFormat.format(date));
            
            if(dataBase.addDocument(this.jTextFieldCategoryCreateTopic.getText(),document)){
                JOptionPane.showMessageDialog(this, "Topic created successful!");
                this.loadDataTopics(this.modelTopics,this.jTextFieldCategoryCreateTopic.getText());
            }else{
                JOptionPane.showMessageDialog(this,"Topic don't create, topic exist!","Error",JOptionPane.ERROR_MESSAGE);
            }        
        }else{
            JOptionPane.showMessageDialog(this,"DataBase don't connection","Error",JOptionPane.ERROR_MESSAGE);
        }
        this.jTextFieldCategoryCreateTopic.setText("");
        this.jTextFieldTopicCreate.setText("");
    }//GEN-LAST:event_jButtonCreateTopicActionPerformed

    private void jButtonDeleteTopicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteTopicActionPerformed
        if(this.statusDB){
            deleteFilesFromTopic(this.jTextFieldCategoryCreateTopic.getText(),this.jTextFieldTopicCreate.getText());
            if(dataBase.deleteTopic(this.jTextFieldCategoryCreateTopic.getText(),this.jTextFieldTopicCreate.getText())){
                JOptionPane.showMessageDialog(this, "Topic delete successful!");
                this.loadDataTopics(this.modelTopics,this.jTextFieldCategoryCreateTopic.getText());
            }else{
                JOptionPane.showMessageDialog(this,"Topic don't delete, topic not exist!","Error",JOptionPane.ERROR_MESSAGE);
            }        
        }else{
            JOptionPane.showMessageDialog(this,"DataBase don't connection","Error",JOptionPane.ERROR_MESSAGE);
        }
        this.jTextFieldTopicCreate.setText("");
    }//GEN-LAST:event_jButtonDeleteTopicActionPerformed

    private void jButtonAddBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddBookActionPerformed
        if(this.statusDB){
            this.jProgressUpload.setValue(0);
            this.jProgressUpload.setVisible(true);
            uploadFile();
        }else{
            JOptionPane.showMessageDialog(this,"DataBase don't connection","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonAddBookActionPerformed

    private void jTableCreateBookCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCreateBookCategoryMouseClicked
        int row = this.jTableCreateBookCategory.rowAtPoint(evt.getPoint());

        this.jTextFieldCategoryBook.setText( this.modelCategory.getValueAt(row, 1).toString() );
        this.loadDataTopics(this.modelTopics,this.jTextFieldCategoryBook.getText());
    }//GEN-LAST:event_jTableCreateBookCategoryMouseClicked

    private void jTableCreateBookTopicMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCreateBookTopicMouseClicked
        int row = this.jTableCreateBookTopic.rowAtPoint(evt.getPoint());

        this.jTextFieldTopicBook.setText( this.modelTopics.getValueAt(row, 1).toString() );
        this.loadDataBooks(this.modelBooks,this.jTextFieldCategoryBook.getText(), this.jTextFieldTopicBook.getText());
    }//GEN-LAST:event_jTableCreateBookTopicMouseClicked

    private void jButtonSelectBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelectBookActionPerformed
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        jfc.setDialogTitle("Select an pdf file");
        jfc.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("PDF files", "pdf", "PDF");
        jfc.addChoosableFileFilter(filter);

        int returnValue = jfc.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION)
            this.jTextFieldPathBook.setText( jfc.getSelectedFile().getPath() );
    }//GEN-LAST:event_jButtonSelectBookActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        this.jFrameSettingsGoogleDrive.pack();
        this.jFrameSettingsGoogleDrive.setLocationRelativeTo(null);
        this.jFrameSettingsGoogleDrive.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButtonBuildAuthorizedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuildAuthorizedActionPerformed
        connectGoogleDrive();
    }//GEN-LAST:event_jButtonBuildAuthorizedActionPerformed

    private void jProgressUploadStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jProgressUploadStateChanged
        if(this.jProgressUpload.getValue()==100){
            addBookDataBase();
            this.jTextFieldCategoryBook.setText("");
            this.jTextFieldTopicBook.setText("");
            this.jTextFieldISBNBook.setText("");
            this.jTextFieldTitleBook.setText("");
            this.jTextFieldAuthorBook.setText("");
            this.jTextFieldEditorialBook.setText("");
            this.jTextFieldPathBook.setText("");
        }
    }//GEN-LAST:event_jProgressUploadStateChanged

    private void jButtonDeleteBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteBookActionPerformed
        if(this.statusDB){
            deleteFilesFromBook(this.jTextFieldCategoryBook.getText(),
                                this.jTextFieldTopicBook.getText(),
                                this.idFileGoogleDriveSelect
                                );
            if(dataBase.removeBook(this.jTextFieldCategoryBook.getText(), this.jTextFieldTopicBook.getText(), this.jTextFieldISBNBook.getText())){
                JOptionPane.showMessageDialog(this, "Book delete successful!");
                this.loadDataBooks(this.modelBooks,this.jTextFieldCategoryBook.getText(), this.jTextFieldTopicBook.getText());
            }else{
                JOptionPane.showMessageDialog(this,"Book don't delete, book not exist!","Error",JOptionPane.ERROR_MESSAGE);
            }        
        }else{
            JOptionPane.showMessageDialog(this,"DataBase don't connection","Error",JOptionPane.ERROR_MESSAGE);
        }
        
        this.modelBooks.loadDataBooks(dataBase,this.jTextFieldCategoryBook.getText(),this.jTextFieldTopicBook.getText());
        
        this.jTextFieldCategoryBook.setText("");
        this.jTextFieldTopicBook.setText("");
        this.jTextFieldISBNBook.setText("");
        this.jTextFieldTitleBook.setText("");
        this.jTextFieldAuthorBook.setText("");
        this.jTextFieldEditorialBook.setText("");
        this.jTextFieldPathBook.setText("");        
    }//GEN-LAST:event_jButtonDeleteBookActionPerformed

    private void jTableCreateBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCreateBookMouseClicked
        int row = this.jTableCreateBook.rowAtPoint(evt.getPoint());
        

        this.idFileGoogleDriveSelect = this.modelBooks.getValueAt(row, 7).toString();
        
        this.jTextFieldISBNBook.setText(this.modelBooks.getValueAt(row, 1).toString());
        this.jTextFieldTitleBook.setText(this.modelBooks.getValueAt(row, 2).toString());
        this.jTextFieldAuthorBook.setText(this.modelBooks.getValueAt(row, 3).toString());
        this.jTextFieldEditorialBook.setText(this.modelBooks.getValueAt(row, 4).toString());
    }//GEN-LAST:event_jTableCreateBookMouseClicked

    private void jButtonOpenBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOpenBookActionPerformed
        try {
            Desktop desktop = java.awt.Desktop.getDesktop();
            URI oURL = new URI(this.urlOpenBook);
            desktop.browse(oURL);
          } catch (Exception e) {
            e.printStackTrace();
          }
    }//GEN-LAST:event_jButtonOpenBookActionPerformed

    private void jTableCategoriesShownMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCategoriesShownMouseClicked
        rowCategory = this.jTableCategoriesShown.rowAtPoint(evt.getPoint());
        this.loadDataTopics(this.modelTopicsShown,this.modelCategoryShown.getValueAt(rowCategory, 1).toString());
    }//GEN-LAST:event_jTableCategoriesShownMouseClicked

    private void jTableTopicsShownMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTopicsShownMouseClicked
        //int rowCategory = this.jTableCategoriesShown.rowAtPoint(evt.getPoint());
        int rowTopic = this.jTableTopicsShown.rowAtPoint(evt.getPoint());
        
        this.loadDataBooks(this.modelBooksShown,this.modelCategoryShown.getValueAt(rowCategory, 1).toString(),this.modelTopicsShown.getValueAt(rowTopic, 1).toString());
    }//GEN-LAST:event_jTableTopicsShownMouseClicked

    private void jTableBooksShownMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableBooksShownMouseClicked
        int row = this.jTableBooksShown.rowAtPoint(evt.getPoint());
        urlOpenBook = this.modelBooksShown.getValueAt(row, 5).toString();
    }//GEN-LAST:event_jTableBooksShownMouseClicked

    private void jTabbedPane1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTabbedPane1ComponentShown
        this.loadDataCategories(this.modelCategoryShown);
    }//GEN-LAST:event_jTabbedPane1ComponentShown

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.loadDataCategories(this.modelCategoryShown);
    }//GEN-LAST:event_formWindowOpened
    
    public void loadDataCategories(ModelTable model){
        if(this.statusDB){
            model.loadDataCategories(dataBase);
        }
        else{
            JOptionPane.showMessageDialog(this,"DataBase don't connection","Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    public void loadDataTopics(ModelTable model,String category){
        if(this.statusDB){
            model.loadDataTopics(dataBase, category);
        }
        else{
            JOptionPane.showMessageDialog(this,"DataBase don't connection","Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    public void loadDataBooks(ModelTable model,String category,String topic){
        
        if(this.statusDB){
            model.loadDataBooks(dataBase, category, topic);
        }
        else{
            JOptionPane.showMessageDialog(this,"DataBase don't connection","Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    public void uploadFile(){
        googleDrive = new GoogleDrive();
        
        googleDrive.BuildNeAuthorized();
        googleDrive.setNameFile(this.jTextFieldISBNBook.getText()+"-"+this.jTextFieldTitleBook.getText());
        googleDrive.setPathLocalFileUpload(this.jTextFieldPathBook.getText());
        googleDrive.setBar(jProgressUpload);
        
        googleDrive.start();
    }
    public void addBookDataBase(){
        String path = googleDrive.getUrlFileUpload();            

        Document document = new Document("_id",this.jTextFieldISBNBook.getText())
                                        .append("title", this.jTextFieldTitleBook.getText())
                                        .append("author", this.jTextFieldAuthorBook.getText())
                                        .append("editorial", this.jTextFieldEditorialBook.getText())
                                        .append("path", path)
                                        .append("size", (Double)((new File(googleDrive.getPathLocalFileUploadCompress()).length())*1E-6) )
                                        .append("idGoogle",googleDrive.getIdFileUpload());
        
        if(this.dataBase.updateAddDocument(this.jTextFieldCategoryBook.getText(), jTextFieldTopicBook.getText(), document)){
            JOptionPane.showMessageDialog(this, "Book add successful!");
            this.modelBooks.loadDataBooks(dataBase,this.jTextFieldCategoryBook.getText(),this.jTextFieldTopicBook.getText());
        }else{
            JOptionPane.showMessageDialog(this,"Book don't add, book error !","Error",JOptionPane.ERROR_MESSAGE);
        }
        new File(googleDrive.getPathLocalFileUploadCompress()).delete();
        this.jProgressUpload.setVisible(false);
    }
    public void connectMongoDB(){
        this.dataBase = new DataBase();
        this.dataBase.setUrl(this.jTextFieldURLDB.getText());
        this.dataBase.setPort(Integer.parseInt(this.jTextFieldPortDB.getText()));
        this.dataBase.setDbName(this.jTextFieldNameDB.getText());
        this.dataBase.setDbUser(this.jTextFieldUserDB.getText());
        this.dataBase.setDbPass(this.jTextFieldPassDB.getText());
        this.statusDB = this.dataBase.createConnection(); 
        if(this.statusDB)
            this.jLabelStatus.setText("Status: OK!");
        else
            this.jLabelStatus.setText("Status: Error!");
    }
    public void connectGoogleDrive(){
        googleDrive = new GoogleDrive();
        googleDrive.BuildNeAuthorized();
        if(googleDrive.isCredentialBuild()){
            JOptionPane.showMessageDialog(this, "Google drive connect successful!");
        }else{
            JOptionPane.showMessageDialog(this,"Google drive error!","Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void deleteFilesFromCollectionOrCategories(String category){
        googleDrive = new GoogleDrive();
        googleDrive.BuildNeAuthorized();
        
        MongoIterable<Document> documents = dataBase.getDocuments(category);
        for(Document document : documents){
            ArrayList<Document> books = (ArrayList<Document>)document.get("books");
            for(Document book: books){
                googleDrive.deleteFile(book.getString("idGoogle"));   
            }
        }
    }
    public void deleteFilesFromTopic(String category,String idDocument){
        googleDrive = new GoogleDrive();
        googleDrive.BuildNeAuthorized();
        
        Document document = dataBase.getDocument(category, idDocument);

        ArrayList<Document> books = (ArrayList<Document>)document.get("books");
        for(Document book: books){
            googleDrive.deleteFile(book.getString("idGoogle"));   
        }

    }
    public void deleteFilesFromBook(String category,String idDocument,String idGoogle){
        googleDrive = new GoogleDrive();
        googleDrive.BuildNeAuthorized();
        googleDrive.deleteFile(idGoogle);
    }

    private ModelTable modelCategory;
    private ModelTable modelTopics;
    private ModelTable modelBooks;
    
    private ModelTable modelCategoryShown;
    private ModelTable modelTopicsShown;
    private ModelTable modelBooksShown;
    private int rowCategory;
    /*
    private int rowCategorySelect;
    private int rowTopicSelect;
    */
    private DataBase dataBase;
    private GoogleDrive googleDrive;
    private boolean statusDB;
    private String idFileGoogleDriveSelect;
    private String urlOpenBook;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddBook;
    private javax.swing.JButton jButtonBuildAuthorized;
    private javax.swing.JButton jButtonConnectDB;
    private javax.swing.JButton jButtonCreateCategory;
    private javax.swing.JButton jButtonCreateTopic;
    private javax.swing.JButton jButtonDeleteBook;
    private javax.swing.JButton jButtonDeleteCategory;
    private javax.swing.JButton jButtonDeleteTopic;
    private javax.swing.JButton jButtonOpenBook;
    private javax.swing.JButton jButtonSelectBook;
    private javax.swing.JFrame jFrameSettingsDB;
    private javax.swing.JFrame jFrameSettingsGoogleDrive;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanelBook;
    private javax.swing.JPanel jPanelCategory;
    private javax.swing.JPanel jPanelManager;
    private javax.swing.JPanel jPanelManagerResources;
    private javax.swing.JPanel jPanelResources;
    private javax.swing.JPanel jPanelTopic;
    private javax.swing.JProgressBar jProgressUpload;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableBooksShown;
    private javax.swing.JTable jTableCategoriesShown;
    private javax.swing.JTable jTableCreateBook;
    private javax.swing.JTable jTableCreateBookCategory;
    private javax.swing.JTable jTableCreateBookTopic;
    private javax.swing.JTable jTableCreateCategory;
    private javax.swing.JTable jTableCreateTopic;
    private javax.swing.JTable jTableCreateTopicCategory;
    private javax.swing.JTable jTableTopicsShown;
    private javax.swing.JTextField jTextFieldAuthorBook;
    private javax.swing.JTextField jTextFieldCategory;
    private javax.swing.JTextField jTextFieldCategoryBook;
    private javax.swing.JTextField jTextFieldCategoryCreateTopic;
    private javax.swing.JTextField jTextFieldEditorialBook;
    private javax.swing.JTextField jTextFieldISBNBook;
    private javax.swing.JTextField jTextFieldNameDB;
    private javax.swing.JTextField jTextFieldPassDB;
    private javax.swing.JTextField jTextFieldPathBook;
    private javax.swing.JTextField jTextFieldPortDB;
    private javax.swing.JTextField jTextFieldTitleBook;
    private javax.swing.JTextField jTextFieldTopicBook;
    private javax.swing.JTextField jTextFieldTopicCreate;
    private javax.swing.JTextField jTextFieldURLDB;
    private javax.swing.JTextField jTextFieldUserDB;
    // End of variables declaration//GEN-END:variables
}
